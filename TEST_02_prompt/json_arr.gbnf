root    ::= arr
value   ::= object | array | string | number | ("true" | "false" | "null") ws

arr     ::=
  "[\n" ws (
            value
    (",\n" ws value)*
  )? "]"

object  ::=
  "{" ws "\"name\"" ":" ws string "}" ws

array   ::=
  "[" ws (
            value
    ("," ws value)*
  )? "]" ws

string  ::= 
  "\"" (
    [^"\\] |
    "\\" (["\\/bfnrt] | "u" [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]) # escapes
  )* "\"" ws

number  ::= 
  "-"? ([1-9] [0-9]* | "0") ("." [0-9]+)? ([eE] [-+]? [0-9]+)? ws

# Optional space: by convention, applied in this grammar after literal chars when allowed
ws     ::= ([ \t\n] ws)?
